#!/bin/sh
#
# Example panel for dzen2

font_family='Terminus'
font_size=11
width=$1
workspaceN=$2

PANEL_FIFO_LEFT=/tmp/minipanelfifo_left
PANEL_FIFO_RIGHT=/tmp/minipanelfifo_right

$HOME/.bspwm/panel_colors

NORMIFS=$IFS
FIELDIFS=':'

while read -r line ; do
	case $line in
		V*) # Empty for updating volume level
			;;
		T*)
			# xtitle output
			# title="^fg($color_fg)^bg($color_bg)^ca(2, bspc window -c)  ${line#?}  ^ca(1, bspc window -c)| ^i($icons/close.xbm)^ca()^ca()^fg()^bg()"
			;;
		W*)
			# bspwm internal state
			IFS=$FIELDIFS
			set -- ${line#?}
			WORKSPACE=""
			WS1=""
			WS2=""
			WS3=""
			while [ $# -gt 0 ] ; do
				item=$1
				case $item in
					[OoFfUu]*)
						# desktops
						name=${item#?}
						case $item in
							O*) # focused occupied desktop
								SHOW=true
								FG='#00DDFF'
								PRE="["
								POST="]"
								;;
							F*) # focused free desktop
								SHOW=true
								FG='#00DDFF'
								PRE="["
								POST="]"
								;;
							U*) # focused urgent desktop
								SHOW=true
								FG='#FF0000'
								PRE="["
								POST="!]"
								;;
							o*) # occupied desktop
								SHOW=true
								FG='#2288FF'
								PRE=""
								POST=""
								;;
							f*) # free desktop
								SHOW=true
								FG=$color_fg
								PRE=""
								POST=""
								;;
							u*) # urgent desktop
								SHOW=true
								FG='#FF0000'
								PRE=""
								POST="!"
								;;
						esac
						if [ $SHOW = true ]; then
							PRE="^fg($FG)^ca(1, bspc desktop -f $name)"$PRE
							POST=$POST"^ca()^fg()"
							new="$workspace$PRE${name:1:1}$POST "
							WORKSPACE="asd"
							if [ ! -z "$workspaceN" ]; then
								WORKSPACE="basd"
								case ${name:0:1} in
									1) 
										WS1=$WS1$new
										;;
									2) 
										WS2=$WS2$new
										;;
									3) 
										WS3=$WS3$new
										;;
								esac
							else
								WS=$WS$new
							fi
						fi
						;;
					L*)
						# LAYOUT
						LAYOUT=$(printf "%s" "${item#?}" | sed 's/^\(.\).*/\U\1/')
						
						if [ "$LAYOUT" = 'T' ]; then
							#li="^i($icons/wm_tall.xbm)"
							li="Tile"
						elif [ "$LAYOUT" = 'M' ]; then
							#li="^i($icons/wm_full.xbm)"
							li="Full"
						fi
						LAYOUT="^ca(1, bspc desktop -l next) $li ^ca()"
						;;
				esac
				shift
			done
			IFS=$NORMIFS
			;;
	esac
	
	#	
	#	Applets
	#

	# Left
	
	# Workspace
	if [ ! -z "$workspaceN" ]; then
		WORKSPACE="casd"
		case ${workspaceN:0:1} in
			1*)
				WORKSPACE=" $WS1"
				;;
			2*)
				WORKSPACE=" $WS2"
				;;
			3*)
				WORKSPACE=" $WS3"
				;;
		esac
	else
		WORKSPACE=" $WS"
	fi

	# Layout
	LAYOUTCOLOR="#55FF55"
	LAYOUT="^fg($LAYOUTCOLOR)"$LAYOUT"^fg()"
	
	# Center
	TIME=$(date +'%H:%M')
	TIMELEN=${#TIME}
	
	# Right
	#Volume
	RECT="^fg(#00FF00)^p(2)^r(6x8)^fg()"
	VOLUME=$(~/Scripts/volume.sh get)
	VOLUME=$( echo $VOLUME | dbar -nonl -w 10)
	VOLUME=${VOLUME//=/$RECT}
	VOLUMELEN=16
	# Icon tray space for trayer
	TRAY="[         ]"
	TRAYLEN=${#TRAY}
	TRAYCOLOR='#FFFF00'
	TRAY="^fg($TRAYCOLOR)"$TRAY"^fg()"
	# System load
	SYSLOAD="Load "$( uptime | grep -ohe 'load average.*' | awk '{ print $3 $4 $5 }' )
	SYSLOADLEN=${#SYSLOAD}
	# Memory free
	MEMFREE=$( free | grep Mem | awk '{print $3/$2 * 100.0}')
	MEMFREE=$( cut -d '.' -f 1 <<< $MEMFREE )
	MEMFREE="Ram "${MEMFREE:0:2}"%"
	MEMFREELEN=${#MEMFREE}
	# Swap usage
	SWAPINFO=$( cat /proc/swaps | tail -n 1 )
	SWAPTOT=$( echo $SWAPINFO | cut -f 2 )
	SWAPUSED=$( echo  $SWAPINFO | cut -f 3 )
	#SWAPPERCENTAGE=$(( $SWAPUSED / $SWAPTOT ))
	SWAPINFO="Swap "$SWAPPERCENTAGE"%"
	SWAPINFOLEN=${#SWAPINFO}

	#
	#	Alignment and concatination
	#

	FONTWIDTH=9
	
	# Left
	LEFT="${WORKSPACE}|${LAYOUT}"
	LEFT="^pa(0)$LEFT"

	# Center
	CENTER="$TIME"
	CENTERLEN=$TIMELEN
	CENTERPOS=$(( $(( $width / 2 )) - $(( $CENTERLEN * $FONTWIDTH)) ))
	CENTER="^pa($CENTERPOS)$CENTER"

	#Right
	# Workspace specific for multi monitor setups
	if [ $workspaceN = 1 ]; then
		RIGHTLEN=$(( $SWAPINFOLEN + $SYSLOADLEN + $MEMFREELEN + 3 ))
		RIGHT=$SWAPINFO" | "$MEMFREE" | "$SYSLOAD
		RIGHTCOLOR='#FFFF55'
		RIGHT="^fg($RIGHTCOLOR)"$RIGHT"^fg()"
	elif [ $workspaceN = 2 ]; then
		RIGHTLEN=$VOLUMELEN
		RIGHT="$VOLUME"
	elif [ $workspaceN = 3 ]; then
		RIGHTLEN=$TRAYLEN
		RIGHT="$TRAY"
	else # For single monitor setups and laptops
		RIGHTLEN=$(( $VOLUMELEN + $TRAYLEN ))
		RIGHT=$VOLUME$TRAY
	fi
	# Move
	RIGHTPOS=$(( $width - $(( $RIGHTLEN * $FONTWIDTH )) ))
	RIGHT="^pa($RIGHTPOS)$RIGHT"

	printf "%s\n" "$LEFT$CENTER$RIGHT"
done
