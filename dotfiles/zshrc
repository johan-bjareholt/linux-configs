export GST_DEBUG_DUMP_DOT_DIR=~
alias diff="colordiff -u"

# -R shows ansi colorcodes
export LESS="-R"

function proxy_enable () {
    export GIT_PROXY_COMMAND="axis-git-proxy"
    export ALL_PROXY="socks://socks.se.axis.com:1081/?"
    export {http,ftp}_proxy='http://wwwproxy.se.axis.com:3128'
    export https_proxy='https://wwwproxy.se.axis.com:3128'
    export {HTTP,FTP}_PROXY='http://wwwproxy.se.axis.com:3128'
    export HTTPS_PROXY='https://wwwproxy.se.axis.com:3128'
    alias pip="pip --proxy ${https_proxy}"
    alias pip3="pip3 --proxy ${https_proxy}"
}

function proxy_disable () {
    export GIT_PROXY_COMMAND=
    export ALL_PROXY=
    export {http,ftp,https}_proxy=
    export {HTTP,FTP,HTTPS}_PROXY=
    unalias pip
    unalias pip3
}

if [ "$HOSTNAME" = "lnxjohanbj" ]; then
    export PATH=$PATH:~/Programming/bin
    source ~/Programming/bin/oe-setup.sh > /dev/null
    alias xcam-scan="xcam-scan -n eth0"
    export AXIS_DEVELOPER=y
    export AXIS_TESTER=y
    export AXIS_TARGET_ADDR=y
    export AXIS_TARGET_IP=192.168.0.90
    export AXIS_RESUME=y
    proxy_enable
fi

alias         ".."="cd .."
alias        "..."="cd ../../"
alias       "...."="cd ../../../"
alias      "....."="cd ../../../../"
alias     "......"="cd ../../../../../"
alias    "......."="cd ../../../../../../"
alias   "........"="cd ../../../../../../../"
alias  "........."="cd ../../../../../../../../"
alias ".........."="cd ../../../../../../../../../"

# Set up the prompt
autoload -Uz promptinit
promptinit

export AXIS_DEVELOPER=y
export AXIS_TESTER=y
export AXIS_TARGET_ADDR=y
export AXIS_TARGET_IP=192.168.0.90
export AXIS_RESUME=y

alias e='vim'
export EDITOR="vim"

if [[ ! -z "$(echo $HOST | grep '\(desktop\|laptop\|lnxjohanbj\|x201\)')" ]]
then
    alias e="ALL_PROXY= HTTP_PROXY= http_proxy= nvim"
    export EDITOR="nvim"
    alias vim="nvim"
    alias diff="colordiff -u"
else
    alias diff="diff -u"
fi

export GTK_THEME=Adwaita:dark
export XKB_DEFAULT_LAYOUT=se
export XKB_DEFAULT_OPTIONS=caps:super

## Path variables
# Android paths
export ANDROID_HOME=/opt/android-sdk/
export PATH=$PATH:/opt/android-sdk/platform-tools
export PATH=$PATH:/opt/android-sdk/tools
export PATH=$PATH:/opt/android-ndk/
export PATH=$PATH:/opt/ant/bin
# Local bins
export PATH=$PATH:/usr/local/bin
# JRE and JDK paths
export PATH=$PATH:/opt/java/jre/bin
export PATH=$PATH:/opt/java/jdk/bin
# Go home, hah!
export GOPATH=~/.go
# Rust Cargo
export PATH=$PATH:~/.cargo/bin

# App Engine
export PATH=$PATH:/opt/google-appengine-go/
export PATH=$PATH:/opt/google-appengine-python/
# Ruby paths
export PATH=$PATH:~/.gem/ruby/2.5.0/bin
export PATH=$PATH:~/.gem/ruby/2.2.0/bin
export PATH=$PATH:~/.gem/ruby/2.1.0/bin
# Path to music
export pathtomusic=/home/johan/Music/
export mpd_music_dir=/home/johan/Music/

## Mina aliases
# kommandon
alias findproc="ps aux | grep"
function pyman(){ python -c "help($1)" }
alias linec="find . -type f | xargs wc -l"
alias steam-wine="wine ~/.wine/drive_c/Program\ Files\ \(x86\)/Steam/Steam.exe"
alias irc="ssh -p 1822 -t home.johan.bjareholt.com 'screen -x irc'"
alias deluge-forward="ssh -p 2222 -f newton.bjareholt.com -L 2000:localhost:8112 -N"
# ls aliases
alias info="info --vi-keys"
alias ls='ls --color=auto'
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

alias alsaeq='alsamixer -D equal'
function cs {
    cd $*
    ls
}
# NYAN
alias nyan='telnet nyancat.dakko.us'

## Home&End fix
bindkey  "^[[1~"   beginning-of-line
bindkey  "^[[4~"   end-of-line

## Make speedup
NC=`cat /proc/cpuinfo | grep processor | wc -l`
alias make="make --jobs=$NC"

## Application fixes

# Bspwm fix
export BSPWM_SOCKET="/tmp/bspwm-socket"

# ssh agent service
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"



## Prompt
autoload -U colors && colors
PROMPT="%{$fg[green]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg_no_bold[yellow]%}%1~ %{$fg[red]%}$%{$reset_color%} "
RPROMPT="[%{$fg_no_bold[yellow]%}%!%{$reset_color%}]"




# History
setopt histignorealldups sharehistory
# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

# Use modern completion system
autoload -Uz compinit
compinit

# Set title
preexec () {
    print -Pn "\e]0;${USER}@${HOST}: ${PWD}\a"
}
precmd () {
    print -Pn "\e]0;${USER}@${HOST}: ${PWD}\a"
}

if [ "$HOST" = "johan-desktop" ]; then
source ~/Programming/activitywatch/aw-watcher-bash/aw-watcher-bash.sh
fi
if [ "$HOST" = "johan-laptop2" ]; then
source ~/Programming/activitywatch/aw-watcher-bash/aw-watcher-bash.sh
fi
